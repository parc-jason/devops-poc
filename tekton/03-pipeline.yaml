apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: devops-poc-pipeline
spec:
  resources:
    - name: source
      type: git
  tasks:
    - name: devops-poc-helm
      params:
        - name: charts_dir
          value: helm/charts/traction
        - name: release_version
          value: v1.0.0
        - name: release_name
          value: poc
        - name: release_namespace
          value: f6b17d-tools
        - name: values_file
          value: values.yaml
        - name: helm_image
          value: >-
            docker.io/lachlanevenson/k8s-helm@sha256:5c792f29950b388de24e7448d378881f68b3df73a7b30769a6aa861061fd08ae
      taskRef:
        name: devops-poc-helm
      resources:
        inputs:
          - name: source
            resource: source
---
apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: devops-poc-helm
spec:
  description: >-
    These tasks will install / upgrade a helm chart into your Kubernetes /
    OpenShift Cluster using Helm
  resources:
    inputs:
      - name: source
        type: git
  params:
    - description: The directory in source that contains the helm chart
      name: charts_dir
      type: string
    - default: v1.0.0
      description: The helm release version in semantic versioning format
      name: release_version
      type: string
    - default: helm-release
      description: The helm release name
      name: release_name
      type: string
    - default: ''
      description: The helm release namespace
      name: release_namespace
      type: string
    - default: ''
      description: >-
        Specify the values you want to overwrite, comma separated:
        autoscaling.enabled=true,replicas=1
      name: overwrite_values
      type: string
    - default: values.yaml
      description: The values file to be used
      name: values_file
      type: string
    - default: >-
        docker.io/lachlanevenson/k8s-helm@sha256:5c792f29950b388de24e7448d378881f68b3df73a7b30769a6aa861061fd08ae
      description: helm image to be used
      name: helm_image
      type: string
  steps:
    - image: $(params.helm_image)
      name: upgrade
      resources: {}
      script: >
        echo current installed helm releases

        helm dep up "$(params.charts_dir)"

        echo installing helm chart...

        helm upgrade --install --wait --values
        "$(params.charts_dir)/$(params.values_file)" --namespace
        "$(params.release_namespace)" --version $(params.release_version)
        $(params.release_name) $(params.charts_dir) --debug --set
        "$(params.overwrite_values)"

